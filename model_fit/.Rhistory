b1
summary(PoissonModel)
b0.se
b1.se
qplot(i, y, main="AIDS cases vs. Time Period")
y <- c(1, 6, 16, 23, 27, 39, 31, 30, 43, 51, 63, 70, 88, 97, 91, 104, 110, 113, 149, 159)
i <- seq(1, 20)
qplot(i, y, main="AIDS cases vs. Time Period")
qplot(i, y, main="AIDS cases vs. Time Period (i)", ylab="AIDS Cases")
qplot(i, y, main="AIDS cases vs. Time Period i", ylab="AIDS Cases")
qplot(i, y, main="# of AIDS cases vs. Time Period i", ylab="# of AIDS Cases")
qplot(log(y), log(i), main="log # of AIDS cases vs. log Time Period i")
z.b1 <- b1 / b1.se
x <- log(i)
X <- cbind(1, x)
b0 <- 0
b1 <- 0
epsilon <- 1e-6
diff <- 1
iter <- 0
while (diff > epsilon) {
lambda <- exp(b0 + b1 * x)
W <- diag(lambda)
z <- b0 + b1 * x + (y/lambda - 1)
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
diff <- (b[1] - b0)^2 + (b[2] - b1)^2
b0 <- b[1]
b1 <- b[2]
iter <- iter + 1
}
# Parameter estimates for b0 and b1
b0
b1
J <- t(X)%*%W%*%X
J.inv <- solve(J)
# Here is the covariance matrix
J.inv
b0.se <- sqrt(J.inv[1, 1])
b1.se <- sqrt(J.inv[2, 2])
z.b1 <- b1 / b1.se
z.b1
pnorm(z.b1)
1 - pnorm(z.b1)
b1
b1.se
J <- t(X)%*%W%*%X
J.inv <- solve(J)
# Here is the covariance matrix
J.inv
b0.se <- sqrt(J.inv[1, 1])
b1.se <- sqrt(J.inv[2, 2])
z.b1 <- b1 / b1.se
# p-value for whether or not b1 is significant in the model
1 - pnorm(z.b1)
b0.ci <- b0 + c(-1, 1) * 1.96 * b0.se
b1.ci <- b1 + c(-1, 1) * 1.96 * b1.se
# Confidence intervals for parameter estimates
b0.ci
b1.ci
z.b1
diag(1,2,3)
mat <- diag(c(1,2,3))
mat
solve(mat)
x <- seq(1:50)
e <- rnorm(50, 0, sqrt(10))
x + e
qplot(x, x + e)
e <- rnorm(50, 0, 10)
qplot(x, x + e)
norm.draws <- rnorm(50, 20, 10)
qplot(norm.draws)
plot(norm.draws)
plot(x, norm.draws)
qplot(x, norm.draws)
?glm
glm(linear.draws ~ 1)
linear.draws <- x + e
glm(linear.draws ~ 1)
glm(linear.draws ~ cbind(1, x))
cbind(1, x)
X <- cbind(1, x)
glm(linear.draws ~ X)
X
glm(linear.draws ~ x)
linear.null.model <- glm(linear.draws ~ 1)
glm(linear.draws ~ x)
linear.covariate.model <- glm(linear.draws ~ x)
linear.covariate.model
linear.null.model
source('~/.active-rstudio-document', echo=TRUE)
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
rand.cov.model
rand.null.model
22.41
(norm.draws - 22.41)^2
sum((norm.draws - 22.41)^2)
sum((norm.draws - (rand.cov.model$coefficients[1] + rand.cov.model$coefficients[2]*x))
^2)
linear.null.model
b0 <- rand.null.model$coefficients[1]
rand.cov.dev <- sum((norm.draws = (b0 + b1*x))^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws = (b0 + b1*x))^2)
rand.cov.dev
x <- seq(1:50)
e <- rnorm(50, 0, 10)
linear.draws <- x + e
norm.draws <- rnorm(50, 20, 10)
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
rand.cov.dev
rand.cov.model
rand.null.dev
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
line.cov.dev
rand.cov.dev
linear.covariate.model
line.null.dev
set.seed(637)
x <- seq(1:50)
e <- rnorm(50, 0, 10)
linear.draws <- x + e
norm.draws <- rnorm(50, 20, 10)
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
line.null.dev
line.cov.dev
rand.null.dev
rand.cov.dev
pchisq(line.null.dev, 50 - 1)
pchisq(line.cov.dev, 50 - 2)
1 - pchisq(rand.null.dev, 50 - 1)
1 - pchisq(rand.cov.dev, 50 - 2)
1 - pchisq(line.null.dev, 50 - 1)
1 - pchisq(line.cov.dev, 50 - 2)
1 - pchisq(rand.null.dev, 50 - 1)
1 - pchisq(rand.cov.dev, 50 - 2)
qchisq(0.95, 50-1)
qchisq(0.95, 50-2)
d.line <- line.null.dev - line.cov.dev
d.rand <- rand.null.dev - rand.cov.dev
d.line
d.rand
d.line
d.rand
qchisq(0.95, 1)
pchisq(21.3, 1)
pchisq(7000, 1)
1-pchisq(21.3, 1)
pchisq(d.line, 1)
pchisq(d.rand, 1)
1-pchisq(d.line, 1)
1-pchisq(d.rand, 1)
norm.draws <- rnorm(50, 20, sqrt(10))
set.seed(637)
x <- seq(1:50)
e <- rnorm(50, 0, 10)
linear.draws <- x + e
norm.draws <- rnorm(50, 20, sqrt(10))
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
qchisq(0.95, 50-1)
1 - pchisq(line.null.dev, 50 - 1)
qchisq(0.95, 50-2)
1 - pchisq(line.cov.dev, 50 - 2)
1 - pchisq(rand.null.dev, 50 - 1)
1 - pchisq(rand.cov.dev, 50 - 2)
d.line <- line.null.dev - line.cov.dev
d.rand <- rand.null.dev - rand.cov.dev
1-pchisq(d.line, 1)
1-pchisq(d.rand, 1)
set.seed(637)
x <- seq(1:50)
e <- rnorm(50, 0, 10)
linear.draws <- x + e
norm.draws <- rnorm(50, 20, 10)
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
rand.null.model
summary(rand.null.model)
var(rand.null.model)
lm(linear.draws ~ 1)
lm(norm.draws ~ 1)
fit1 <- lm(norm.draws ~ 1)
summary(fit1)
summary(linear.null.model)
summary(linear.covariate.model)
summary(rand.null.model)
(summary(rand.null.dev)$sigma)^2
str(summary(rand.null.dev))
summary(rand.null.dev)
summary(linear.null.model)
summary(linear.null.model)$sigma
names(summary(linear.covariate.model))
summary(linear.null.model)$cov.unscaled
summary(linear.null.model)$deviance.resid
names(linear.null.model)
linear.null.model$residuals
sum(linear.null.model$residuals)
mean(linear.null.model$residuals^2)
mean(linear.covariate.model$residuals^2)
mean(rand.null.model$residuals^2)
mean(rand.cov.model$residuals^2)
13477 / 269
5696 / 100
4924 / 100
4903/100
13477 / 100
linear.covariate.model$residuals^2 / (49)
sum(linear.covariate.model$residuals^2) / (49)
sum(linear.null.model$residuals^2) / (49)
mod1.resid <- sum(linear.null.model$residuals^2) / 49
mod2.resid <- sum(linear.cov.model$residuals^2) / 48
mod2.resid <- sum(linear.covariate.model$residuals^2) / 48
mod3.resid <- sum(rand.null.model$residuals^2) / 49
mod4.resid <- sum(rand.cov.model$residuals^2) / 48
mod1.var <- sum(linear.null.model$residuals^2) / 49
mod2.var <- sum(linear.covariate.model$residuals^2) / 48
mod3.var <- sum(rand.null.model$residuals^2) / 49
mod4.var <- sum(rand.cov.model$residuals^2) / 48
mod1.dev <- rand.null.dev / mod1.var
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
mod3.dev <- rand.null.dev / mod3.var
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
mod4.dev <- rand.cov.dev / mod4.var
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
mod1.dev <- line.null.dev / mod1.var
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
mod2.dev <- line.cov.dev / mod2.var
mod1.dev
mod2.dev
rand.null.dev
line.cov.dev
mod2.var
mod1.dev
line.null.dev
mod1.var
13477 / 275
mod3.dev
mod4.dev
rand.cov.dev
mod4.var
mod2.var
mod3.var
mod1.var
4903 / 102
mod1.dev
13477.42 / 275.0494
mod2.var
mod3.var
mod3.dev
mod4.var
mod4.dev
linear.null.model
set.seed(637)
x <- seq(1:50)
e <- rnorm(50, 0, 10)
linear.draws <- x + e
norm.draws <- rnorm(50, 20, 10)
linear.null.model <- glm(linear.draws ~ 1)
linear.covariate.model <- glm(linear.draws ~ x)
mod1.var <- sum(linear.null.model$residuals^2) / 49
mod2.var <- sum(linear.covariate.model$residuals^2) / 48
rand.null.model <- glm(norm.draws ~ 1)
rand.cov.model <- glm(norm.draws ~ x)
mod3.var <- sum(rand.null.model$residuals^2) / 49
mod4.var <- sum(rand.cov.model$residuals^2) / 48
b0 <- rand.null.model$coefficients[1]
rand.null.dev <- sum((norm.draws - b0)^2)
mod3.dev <- rand.null.dev / mod3.var
b0 <- rand.cov.model$coefficients[1]
b1 <- rand.cov.model$coefficients[2]
rand.cov.dev <- sum((norm.draws - (b0 + b1*x))^2)
mod4.dev <- rand.cov.dev / mod4.var
b0 <- linear.null.model$coefficients[1]
line.null.dev <- sum((linear.draws - b0)^2)
mod1.dev <- line.null.dev / mod1.var
b0 <- linear.covariate.model$coefficients[1]
b1 <- linear.covariate.model$coefficients[2]
line.cov.dev <- sum((linear.draws - (b0 + b1*x))^2)
mod2.dev <- line.cov.dev / mod2.var
# qchisq(0.95, 50-1)
# 1 - pchisq(line.null.dev, 50 - 1)
# qchisq(0.95, 50-2)
# 1 - pchisq(line.cov.dev, 50 - 2)
# 1 - pchisq(rand.null.dev, 50 - 1)
# 1 - pchisq(rand.cov.dev, 50 - 2)
d.line <- line.null.dev - line.cov.dev
d.rand <- rand.null.dev - rand.cov.dev
mod1.dev
line.null.dev
line.null.dev / 100
mod3.dev <- rand.null.dev / 100
mod4.dev <- rand.cov.dev / 100
mod1.dev <- line.null.dev /100
mod2.dev <- line.cov.dev / 100
1 - pchisq(mod1.dev, 50 - 1)
mod1.dev
1 - pchisq(mod2.dev, 50 - 2)
mod2.dev
1 - pchisq(mod3.dev, 50 - 1)
1 - pchisq(mod4.dev, 50 - 2)
134.7742 - 56.96403
mod3.dev - mod4.dev
1 - qchisq(0.2130077)
1 - qchisq(1, 0.2130077)
1 - qchisq(0.2130077, 1)
library(lme4)
library(R2jags)
library(rjags)
install.packages("rjags")
library(rjags)
remove.packages(rjags)
remove.packages("rjags")
library(rjags)
install.packages("rjags")
library(rjags)
install.packages("rjags")
library(rjags)
remove.packages("rjags")
install.packages("rjags")
library("rjags")
remove.packages("rjags")
num <- exp(-2.469 + 0.975); print(num / (1 + num))
-2.469 + 0.975
sat <- c(rep(1, 4), rep(2, 14), rep(3, 63), rep(4, 23))
gender <- c(rep(0, 3), rep(1, 1), rep(0, 9), rep(1, 5),
rep(0, 40), rep(1, 23), rep(0, 12), rep(1, 11))
length(gender)
length(sat)
income <- c(1, 2, 2, 1, rep(1, 3), rep(2, 3), 3, rep(4, 2),
1, rep(2, 3), 4, rep(1, 11), rep(2, 17), rep(3, 8),
rep(4, 4), rep(1, 2), rep(2, 5), rep(3, 7), rep(4, 9),
rep(1, 2), rep(2, 3), rep(3, 5), rep(4, 2), 1, 2, rep(3, 3),
rep(4, 6))
length(income)
df.jobsat <- data.frame(satisfaction = factor(sat), gender = gender, income = income)
table(sat, income, gender)
table(income, sat, gender)
sat <- c(rep(1, 4), rep(2, 14), rep(3, 63), rep(4, 23))
gender <- c(rep("f", 3), rep("m", 1), rep("f", 9), rep("m", 5),
rep("f", 40), rep("m", 23), rep("f", 12), rep("m", 11))
income <- c(1, 2, 2, 1, rep(1, 3), rep(2, 3), 3, rep(4, 2),
1, rep(2, 3), 4, rep(1, 11), rep(2, 17), rep(3, 8),
rep(4, 4), rep(1, 2), rep(2, 5), rep(3, 7), rep(4, 9),
rep(1, 2), rep(2, 3), rep(3, 5), rep(4, 2), 1, 2, rep(3, 3),
rep(4, 6))
df.jobsat <- data.frame(satisfaction = factor(sat), gender = gender, income = income)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), weights=counts)
library(vglm)
install.packages("vglm")
??vglm
install.packages("vgam")
install.packages("VGAM")
library(VGAM)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), weights=counts)
df.jobsat <- data.frame(satisfaction = factor(sat), gender = gender, income = income)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), weights=counts)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), weights=counts, data = df.jobsat)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), data = df.jobsat)
df.jobsat <- data.frame(satisfaction = sat, gender = gender, income = income)
cumlog <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), data = df.jobsat)
cumlog
summary(cumlog)
propmod <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), data = df.jobsat)
df.jobsat$sat2 <- ifelse(df.jobsat$satisfaction < 3, 1, 2)
propmod <- vglm(sat2 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
propmod <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), data = df.jobsat)
propmod2 <- vglm(sat2 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
summary(propmod2)
summary(propmod)
df.jobsat$sat1[df.jobsat$satisfaction > 2] <- 3
df.jobsat$sat2 <- df.jobsat$sat2 - 1
propmod2 <- vglm(sat1 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
df.jobsat$sat1 <- df.jobsat$satisfaction
df.jobsat$sat1[df.jobsat$satisfaction > 2] <- 3
df.jobsat$sat2 <- df.jobsat$satisfaction
df.jobsat$sat2[df.jobsat$satisfaction < 3] <- 2
df.jobsat$sat2 <- df.jobsat$sat2 - 1
propmod <- vglm(satisfaction ~ gender + income, cumulative(parallel=T), data = df.jobsat)
propmod1 <- vglm(sat1 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
summary(propmod)
summary(propmod1)
propmod2 <- vglm(sat2 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
summary(propmod)
summary(propmod1)
summary(propmod2)
table(df.jobsat$sat2)
table(df.jobsat$satisfaction)
table(df.jobsat$sat1)
df.jobsat$sat2[df.jobsat$satisfaction < 3] <- 2
df.jobsat$sat2 <- df.jobsat$satisfaction
df.jobsat$sat2[df.jobsat$satisfaction < 3] <- 2
propmod2 <- vglm(sat2 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
summary(propmod2)
df.jobsat$sat2 <- df.jobsat$sat2 - 1
propmod2 <- vglm(sat2 ~ gender + income, cumulative(parallel=T), data=df.jobsat)
summary(propmod2)
summary(propmod2)$coefficients
str(propmod)
coef(propmod)
tail(coef(propmod))
coef(propmod)[length(coef(propmod))]
summary(propmod)
summary(propmod1)
summary(propmod2)
summary(propmod)
1 - pnorm(-0.51044/0.20224)
pnorm(-0.51044/0.20224)
(1 - pnorm(0.51044/0.20224))*2
summary(propmod1)
propmod3 <- vglm(sat2 ~ gender + income + gender:income, cumulative(parallel=T), data=df.jobsat)
summary(propmod3)
propmod3 <- vglm(satisfaction ~ gender + income + gender:income, cumulative(parallel=T), data=df.jobsat)
summary(propmod3)
anova(propmod, propmod3)
lrtest(propmod, propmod3)
summary(propmod3)
lrtest(propmod, propmod3)
lrtest(propmod3, propmod)
summary(propmod3)
summary(propmod)
n.x <- 700
max.x <- 48
s <- seq(0, 48, length=n.x)
# generate coefficients
s.dist <- rdist(s)
s2.theta <- 5
cov.mat.theta <- s2.theta * Matern(s.dist, range=5, smoothness=2.5)
theta <- mvrnorm(1, rep(0, length=n.x), cov.mat.theta)
plot(s, theta, type="l")
# generate x's
s2.x <- 100
cov.mat <- s2.x * Matern(s.dist, range=2, smoothness=1.5)
n <- 100
X.gen <- matrix(NA, ncol=n.x, nrow=n)
for (i in 1:n) {
mean.vec <- rnorm(n.x, 0, sd=1.5)
X.gen[i, ] <- mvrnorm(1, mean.vec, cov.mat)
}
plot(s, X.gen[1, ], type="l")
# generate y's
y <- X.gen%*%theta + rnorm(nrow(X.gen), 0, 1)
# Create K matrix for process convolution stuff
source('~/Statistics/Projects/Integrated Distributed Lags/simulation.R', echo=TRUE)
q(save = no)
q(save = "no")
setwd("~/statistics/projects/houston_heat/reviewer_response/run_this")
source('~/statistics/projects/houston_heat/reviewer_response/run_this/fit00.R', echo=TRUE)
